#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <string.h>



int is_prime(long long n) {
    if (n <= 1) return 0;
    if (n == 2) return 1;
    if (n % 2 == 0) return 0;
    for (long long i = 3; i <= sqrt(n); i += 2) {
        if (n % i == 0) return 0;
    }
    return 1;
}


long long generate_prime() {
    long long num;
    while (1) {
        num = rand() % 9000000000000000 + 1000000000000000; 
        if (is_prime(num)) {
            return num;
        }
    }
}


long long gcd(long long a, long long b) {
    while (b != 0) {
        long long temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}


long long mod_inverse(long long a, long long m) {
    long long m0 = m, t, q;
    long long x0 = 0, x1 = 1;

    if (m == 1) return 0;

    while (a > 1) {
        q = a / m;
        t = m;

        m = a % m;
        a = t;

        t = x0;
        x0 = x1 - q * x0;
        x1 = t;
    }

    if (x1 < 0) x1 += m0;

    return x1;
}

int main() {
    srand(time(NULL));

  
    long long p = generate_prime();
    long long q = generate_prime();

  
    long long N = p * q;

   
    long long e = 65537;

    long long phi = (p - 1) * (q - 1);

    if (gcd(e, phi) != 1) {
        printf("e и phi не са взаимно прости, трябва да изберем друго e.\n");
        return 1;
    }


    long long d = mod_inverse(e, phi);

    printf("Публичен ключ: (e = %lld, N = %lld)\n", e, N);
    printf("Частен ключ: (d = %lld, N = %lld)\n", d, N);

    return 0;
}
